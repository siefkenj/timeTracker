// Generated by CoffeeScript 1.9.1
var app, setupMonth,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

setupMonth = function(displayMonth, calendarData) {
  var day, displayDays, findDateData, firstDay, i, index, lastMonth, len, makeLastMonthDate, makeNextMonthDate, makeThisMonthDate, month, nextMonth, numDays, remainingDays, result, thisMonth, week, x, year;
  year = displayMonth.getFullYear();
  month = displayMonth.getMonth();
  firstDay = displayMonth.getDay();
  findDateData = function(day, month) {
    return calendarData[(new Date(year, month, day)).toDateString()];
  };
  makeLastMonthDate = function(day) {
    return {
      date: (new Date(year, month - 1, -day)).getDate(),
      data: findDateData(day, month - 1)
    };
  };
  makeThisMonthDate = function(day) {
    return {
      date: day,
      data: findDateData(day, month)
    };
  };
  makeNextMonthDate = function(day) {
    return {
      date: day,
      data: findDateData(day, month + 1)
    };
  };
  lastMonth = ((function() {
    var i, ref, results;
    results = [];
    for (x = i = 0, ref = firstDay; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
      results.push(makeLastMonthDate(x));
    }
    return results;
  })()).reverse();
  numDays = (new Date(year, month + 1, 0)).getDate();
  thisMonth = (function() {
    var i, ref, results;
    results = [];
    for (x = i = 1, ref = numDays; 1 <= ref ? i <= ref : i >= ref; x = 1 <= ref ? ++i : --i) {
      results.push(makeThisMonthDate(x));
    }
    return results;
  })();
  remainingDays = modulo(7 - modulo(numDays + firstDay, 7), 7);
  nextMonth = (function() {
    var i, ref, results;
    results = [];
    for (x = i = 0, ref = remainingDays; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
      results.push(makeNextMonthDate(x + 1));
    }
    return results;
  })();
  displayDays = lastMonth.concat(thisMonth.concat(nextMonth));
  result = [];
  week = [];
  for (index = i = 0, len = displayDays.length; i < len; index = ++i) {
    day = displayDays[index];
    week.push(day);
    if (!((index + 1) % 7)) {
      result.push(week);
      week = [];
    }
  }
  console.log(result);
  return result;
};

app = angular.module('calendarControllers', []);

app.controller('Calendar', [
  '$scope', '$http', function($scope, $http) {
    $http.get("js/test-hangout-data.json").success(function(response) {
      var locale, month, now, year;
      $scope.calendarData = response;
      locale = 'en-us';
      now = new Date();
      year = now.getFullYear();
      month = now.getMonth();
      $scope.monthNum = month;
      $scope.yearNum = year;
      $scope.month = function() {
        var date;
        date = new Date($scope.yearNum, $scope.monthNum, 1);
        return date.toLocaleDateString(locale, {
          month: 'long'
        });
      };
      $scope.$watch('monthNum', function() {
        return $scope.displayDays = setupMonth(new Date($scope.yearNum, $scope.monthNum, 1), $scope.calendarData);
      });
    });
  }
]);
