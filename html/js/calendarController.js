// Generated by CoffeeScript 1.9.2
(function() {
  var app, calendarController, calendarDayWidget, setupMonth,
    modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

  setupMonth = function(displayMonth, dataService) {
    var day, displayDays, firstDay, i, index, lastMonth, len, makeDate, month, nextMonth, numDays, remainingDays, result, thisMonth, week, x, year;
    year = displayMonth.getFullYear();
    month = displayMonth.getMonth();
    firstDay = displayMonth.getDay();
    makeDate = function(date) {
      var ret;
      ret = {
        jsDate: date,
        date: date.getDate(),
        data: null
      };
      dataService.get(ret.jsDate).then(function(dayData) {
        return ret.data = dayData;
      });
      return ret;
    };
    lastMonth = ((function() {
      var i, ref, results;
      results = [];
      for (x = i = 0, ref = firstDay; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
        results.push(makeDate(new Date(year, month, -x)));
      }
      return results;
    })()).reverse();
    numDays = (new Date(year, month + 1, 0)).getDate();
    thisMonth = (function() {
      var i, ref, results;
      results = [];
      for (x = i = 1, ref = numDays; 1 <= ref ? i <= ref : i >= ref; x = 1 <= ref ? ++i : --i) {
        results.push(makeDate(new Date(year, month, x)));
      }
      return results;
    })();
    remainingDays = modulo(7 - modulo(numDays + firstDay, 7), 7);
    nextMonth = (function() {
      var i, ref, results;
      results = [];
      for (x = i = 0, ref = remainingDays; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
        results.push(makeDate(new Date(year, month + 1, x + 1)));
      }
      return results;
    })();
    displayDays = lastMonth.concat(thisMonth.concat(nextMonth));
    result = [];
    week = [];
    for (index = i = 0, len = displayDays.length; i < len; index = ++i) {
      day = displayDays[index];
      week.push(day);
      if (!((index + 1) % 7)) {
        result.push(week);
        week = [];
      }
    }
    return result;
  };

  app = angular.module('calendarControllers', []);

  calendarController = function($scope, $http, dataService, $routeParams) {
    var now;
    now = new Date();
    console.log($routeParams.month, $routeParams.year);
    $scope.monthNum = $routeParams.month ? ($routeParams.month - 1) | 0 : now.getMonth();
    $scope.yearNum = $routeParams.year ? $routeParams.year | 0 : now.getFullYear();
    $scope.monthName = function() {
      var date, locale;
      locale = 'en-us';
      date = new Date($scope.yearNum, $scope.monthNum, 1);
      return date.toLocaleDateString(locale, {
        month: 'long'
      });
    };
    $scope.$watch('monthNum', function() {
      return $scope.displayDays = setupMonth(new Date($scope.yearNum, $scope.monthNum, 1), dataService);
    });
  };

  app.controller('Calendar', ['$scope', '$http', 'dataService', '$routeParams', calendarController]);

  calendarDayWidget = function() {
    return {
      templateUrl: 'templates/calendar_day_widget.html',
      restrict: 'E',
      scope: {
        day: "=day"
      }
    };
  };

  app.directive('calendarDayWidget', calendarDayWidget);

}).call(this);
